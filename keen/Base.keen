#export Int (), String (), Array (), Option, Bool
#export error, if, when, unless, while, switch

#data Int ()
#data String ()
#data Array[a] ()
#data Option[a] (None, Some(value : a))
#data Bool (False, True)

error : String -> a = {|message|
    #js throw message
    #js void 0
}

if : Bool -> (() -> a) -> (() -> a) -> a = {
    |True| {|then| {|_| then() }}
    |False| {|_| {|else| else() }}
}

when : Bool -> (() -> a) -> () = {|condition| {|body| if(condition){ body(); () }{} }}

unless : Bool -> (() -> a) -> () = {|condition| {|body| if(condition){}{ body(); () } }}

while : (() -> Bool) -> (() -> a) -> () = {|condition| {|body|
    when(condition()) {
        body()
        while(condition)(body)
    }
}}

switch : a -> (a -> b) -> b = {|x| {|f| f(x) }}
